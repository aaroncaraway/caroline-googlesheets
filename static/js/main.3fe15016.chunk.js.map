{"version":3,"sources":["Tabs.js","ChartTest.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","data","name","uv","pv","amt","ChartTest","BarChart","width","height","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Bar","fill","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kVA6CkBA,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,EACVC,gBAAiBH,EAAMI,QAAQC,WAAWC,W,iECQxCC,EAAO,CACX,CACEC,KAAM,SACNC,GAAI,IACJC,GAAI,KACJC,IAAK,MAEP,CACEH,KAAM,SACNC,GAAI,IACJC,GAAI,KACJC,IAAK,MAEP,CACEH,KAAM,SACNC,GAAI,IACJC,GAAI,KACJC,IAAK,MAEP,CACEH,KAAM,SACNC,GAAI,KACJC,GAAI,KACJC,IAAK,KAEP,CACEH,KAAM,SACNC,GAAI,KACJC,GAAI,KACJC,IAAK,MAEP,CACEH,KAAM,SACNC,GAAI,KACJC,GAAI,KACJC,IAAK,MAEP,CACEH,KAAM,SACNC,GAAI,KACJC,GAAI,KACJC,IAAK,OAIM,SAASC,IACtB,OACE,eAACC,EAAA,EAAD,CACEC,MAAO,IACPC,OAAQ,IACRR,KAAMA,EACNS,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GARZ,UAWE,cAACC,EAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,EAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAKJ,QAAQ,KAAKK,KAAK,YACvB,cAACD,EAAA,EAAD,CAAKJ,QAAQ,KAAKK,KAAK,eCrGdC,MAZf,WACE,OACE,qBAAKC,UAAU,MAAf,SAKE,cAACnB,EAAD,OCFSoB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3fe15016.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport VideoGallery from './VideoGallery';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [data, setData] = useState();\n  const [classData, setClassData] = useState();\n  const [videoData, setVideoData] = useState();\n  const [aboutData, setAboutData] = useState();\n\n  let aboutPhoto = '';\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const getHeaders = async () => {\n    // ==============================\n    // SHEET 1: GETTING CLASS DATA\n    const headersUrl =\n      'https://sheets.googleapis.com/v4/spreadsheets/1qmBlKnDlVFDJH3r3EOEB4bZiga6nIvIYOE1-5_MxNI4/values/HEADERS?alt=json&key=AIzaSyCdrAjgFE56jXOaBJl6tWg7yJXgBEm65Us';\n    // 'https://sheets.googleapis.com/v4/spreadsheets/1qmBlKnDlVFDJH3r3EOEB4bZiga6nIvIYOE1-5_MxNI4/values/CLASSES?alt=json&key=AIzaSyCdrAjgFE56jXOaBJl6tWg7yJXgBEm65Us';\n    // 'https://sheets.googleapis.com/v4/spreadsheets/1qmBlKnDlVFDJH3r3EOEB4bZiga6nIvIYOE1-5_MxNI4/public/values/CLASSES'\n    // V4 https://sheets.googleapis.com/v4/spreadsheets/spreadsheetId/values/Sheet1\n    //  V3 https://spreadsheets.google.com/feeds/list/spreadsheetId/sheetId/private/full\n    // 'https://spreadsheets.google.com/feeds/cells/1qmBlKnDlVFDJH3r3EOEB4bZiga6nIvIYOE1-5_MxNI4/1/public/values?alt=json';\n\n    const headers = await axios(headersUrl);\n    console.log('HEADERS', headers);\n  };\n\n  const fetchData = async () => {\n    // ==============================\n    // SHEET 1: GETTING CLASS DATA\n    const url =\n      'https://sheets.googleapis.com/v4/spreadsheets/1Z81ouVhG6dbsX53ACtYO4Tk-t6hFNOp2-bCTxwNgHTY/values/Sheet1?alt=json&key=AIzaSyCdrAjgFE56jXOaBJl6tWg7yJXgBEm65Us';\n    // 'https://sheets.googleapis.com/v4/spreadsheets/1qmBlKnDlVFDJH3r3EOEB4bZiga6nIvIYOE1-5_MxNI4/values/Form+Responses+1?alt=json&key=AIzaSyCdrAjgFE56jXOaBJl6tWg7yJXgBEm65Us';\n    // 'https://sheets.googleapis.com/v4/spreadsheets/1qmBlKnDlVFDJH3r3EOEB4bZiga6nIvIYOE1-5_MxNI4/values/CLASSES?alt=json&key=AIzaSyCdrAjgFE56jXOaBJl6tWg7yJXgBEm65Us';\n    // 'https://sheets.googleapis.com/v4/spreadsheets/1qmBlKnDlVFDJH3r3EOEB4bZiga6nIvIYOE1-5_MxNI4/public/values/CLASSES'\n    // V4 https://sheets.googleapis.com/v4/spreadsheets/spreadsheetId/values/Sheet1\n    //  V3 https://spreadsheets.google.com/feeds/list/spreadsheetId/sheetId/private/full\n    // 'https://spreadsheets.google.com/feeds/cells/1qmBlKnDlVFDJH3r3EOEB4bZiga6nIvIYOE1-5_MxNI4/1/public/values?alt=json';\n\n    const result = await axios(url);\n    console.log('RESULT', result);\n    console.log('RESULT VALUES', result.data.values);\n    const reversed_data = result.data.values.reverse();\n\n    // FORMATTING ARRAY DATA\n    // 1. get only TODAYs data\n    // 2. Match it with the array of THINGS TO DO\n    // 3.\n\n    // const thingsToDo =\n\n    setData(reversed_data);\n    setClassData(reversed_data);\n\n    // ==============================\n    // SHEET 2: GETTING VIDEO DATA\n    // const videoUrl =\n    //   'https://spreadsheets.google.com/feeds/cells/1qmBlKnDlVFDJH3r3EOEB4bZiga6nIvIYOE1-5_MxNI4/2/public/values?alt=json';\n    // const videoResults = await axios(videoUrl);\n    // setVideoData(\n    //   videoResults.data.feed.entry.filter((item) =>\n    //     item.content['$t'].includes('iframe') ? item.content['$t'] : ''\n    //   )\n    // );\n\n    // ==============================\n    // SHEET 3: GETTING ABOUT DATA\n    // const aboutUrl =\n    //   'https://spreadsheets.google.com/feeds/cells/1qmBlKnDlVFDJH3r3EOEB4bZiga6nIvIYOE1-5_MxNI4/3/public/values?alt=json';\n    // const aboutResults = await axios(aboutUrl);\n    // console.log(aboutResults);\n    // setAboutData(aboutResults.data.feed.entry);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // ======================================================\n  // ######################################################\n  // TESTING COMMAND-CENTER SERVER\n\n  const fetchCCData = async () => {\n    // ==============================\n    // SHEET 1: GETTING CC DATA\n    const url = 'https://command-center-express-server.herokuapp.com/data';\n    console.log('GETTING HERE');\n    const ccResult = await axios(url);\n    console.log('CC-RESULT', ccResult);\n  };\n\n  useEffect(() => {\n    console.log('getting HERE!!!');\n    fetchCCData();\n  }, []);\n\n  // ======================================================\n  // ######################################################\n\n  useEffect(() => {\n    const checkEvery3Seconds = setInterval(() => {\n      fetchData();\n    }, 3000);\n\n    return () => {\n      // cleaning up\n      clearInterval(checkEvery3Seconds);\n    };\n  }, []);\n\n  useEffect(() => {\n    const formatAboutData = () => {\n      if (aboutData) {\n        aboutPhoto = aboutData[1].content['$t'];\n        console.log('running NOW', aboutData[1].content['$t']);\n      }\n    };\n    formatAboutData();\n  }, [aboutData]);\n\n  const videoGallery = useMemo(() => <VideoGallery videoData={videoData} />, [\n    videoData,\n  ]);\n\n  // const aboutPhoto = aboutData[1].content['$t'];\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n        >\n          <Tab label=\"SCHEDULE!!!!!\" {...a11yProps(0)} />\n          <Tab label=\"VIDEOS\" {...a11yProps(1)} />\n          <Tab label=\"ABOUT\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <>{data && data.map((item) => <h3>{item[0]}</h3>)}</>\n        {/* <>{data && data.map((item) => <h3>{item.content['$t']}</h3>)}</> */}\n      </TabPanel>\n      {/* <TabPanel value={value} index={1}>\n        {videoGallery}\n      </TabPanel> */}\n      <TabPanel value={value} index={2}>\n        <>{data && data.map((item) => <h3>{item}</h3>)}</>\n        {/* <>{data && data.map((item) => <h3>{item.content['$t']}</h3>)}</> */}\n      </TabPanel>\n      {/* <TabPanel value={value} index={2}>\n        {aboutData && (\n          <>\n            <img src={aboutData[1].content['$t']} alt=\"caroline\" />\n            <h3>{aboutData[3].content['$t']}</h3>\n          </>\n        )}\n      </TabPanel> */}\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from 'recharts';\n\n// const data = [\n//   {\n//     name: 'Page A',\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400,\n//   },\n//   {\n//     name: 'Page B',\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210,\n//   },\n//   {\n//     name: 'Page C',\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290,\n//   },\n//   {\n//     name: 'Page D',\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000,\n//   },\n//   {\n//     name: 'Page E',\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181,\n//   },\n//   {\n//     name: 'Page F',\n//     uv: 2390,\n//     pv: 3800,\n//     amt: 2500,\n//   },\n//   {\n//     name: 'Page G',\n//     uv: 3490,\n//     pv: 4300,\n//     amt: 2100,\n//   },\n// ];\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default function ChartTest() {\n  return (\n    <BarChart\n      width={500}\n      height={300}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Bar dataKey=\"pv\" fill=\"#8884d8\" />\n      <Bar dataKey=\"uv\" fill=\"#82ca9d\" />\n    </BarChart>\n  );\n}\n","import './App.css';\n// import Dashboard from './Dashboard';\nimport Tabs from './Tabs';\nimport ChartTest from './ChartTest';\n// import ToDoList from './ToDoList';\n// import TestingPage from './TestingPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Dashboard /> */}\n      {/* <Tabs /> */}\n      {/* <TestingPage /> */}\n      {/* <ToDoList /> */}\n      <ChartTest />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}