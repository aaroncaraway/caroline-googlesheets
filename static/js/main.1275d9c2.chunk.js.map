{"version":3,"sources":["Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","Dashboard","useState","loading","setLoading","data","setData","useEffect","a","axios","result","console","log","feed","entry","fetchData","className","AppBar","position","Typography","gutterBottom","variant","component","map","item","content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,MAqC1BC,MAnCf,WACkBH,IAAhB,IADmB,EAEWI,oBAAS,GAFpB,mBAEZC,EAFY,KAEHC,EAFG,OAGKF,qBAHL,mBAGZG,EAHY,KAGNC,EAHM,KAkBnB,OAbAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,4DAEd,oHAFc,SAGKC,IADnB,qHAFc,OAGVC,EAHU,OAIhBC,QAAQC,IAAIF,EAAOL,MACnBM,QAAQC,IAAIF,EAAOL,KAAKQ,KAAKC,OAC7BR,EAAQI,EAAOL,KAAKQ,KAAKC,OACzBV,GAAW,GAPK,2CAAH,qDASfW,KACC,IAGD,sBAAKC,UAAU,YAAf,UACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,yBACCf,EACC,cAACgB,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,wBAIA,mCACGjB,GAAQA,EAAKkB,KAAI,SAACC,GAAD,OAAU,6BAAKA,EAAKC,QAAL,cC1B5BC,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCMSW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1275d9c2.chunk.js","sourcesContent":["// eslint-disable jsx-props-no-spreading\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\n\nconst useStyles = makeStyles((theme) => ({}));\n\nfunction Dashboard() {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const url =\n        'https://spreadsheets.google.com/feeds/cells/1qmBlKnDlVFDJH3r3EOEB4bZiga6nIvIYOE1-5_MxNI4/1/public/values?alt=json';\n      const result = await axios(url);\n      console.log(result.data);\n      console.log(result.data.feed.entry);\n      setData(result.data.feed.entry);\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"dashboard\">\n      <AppBar position=\"static\">Hello there</AppBar>\n      {loading ? (\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          ...loading\n        </Typography>\n      ) : (\n        <>\n          {data && data.map((item) => <h3>{item.content['$t']}</h3>)}\n          {/* <Gallery photos={data.photos} /> */}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import './App.css';\nimport Dashboard from './Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}